{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst nextPersist = {};\n\n() => {\n  //save something to local storage\n  console.log('componentDidUpdate!', this.state);\n  localStorage.setItem('key', JSON.stringify(this.state));\n};\n\nconst clientState = localStorage.getItem('key');\nconsole.log('hello?', clientState);\n\nif (clientState) {\n  const {\n    lastMarketId,\n    marketList,\n    newLocation,\n    totalCards,\n    totalMarkets\n  } = JSON.parse(clientState);\n  console.log('clientState exists', marketList);\n  this.setState(state => {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      marketList,\n      lastMarketId,\n      totalMarkets,\n      newLocation,\n      totalCards\n    });\n  });\n} // else return { state };\n\n\nexport default nextPersist;","map":{"version":3,"sources":["/Users/matthewsalvador/CS/codesmith-repos/pp/nextjs-tutorial/next-persist.js"],"names":["nextPersist","console","log","state","localStorage","setItem","JSON","stringify","clientState","getItem","lastMarketId","marketList","newLocation","totalCards","totalMarkets","parse","setState"],"mappings":";;;;;;AAAA,MAAMA,WAAW,GAAG,EAApB;;AAEA,MAAM;AACJ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC,KAAKC,KAAxC;AACAC,EAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BC,IAAI,CAACC,SAAL,CAAe,KAAKJ,KAApB,CAA5B;AACD,CAJD;;AAMA,MAAMK,WAAW,GAAGJ,YAAY,CAACK,OAAb,CAAqB,KAArB,CAApB;AACIR,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBM,WAAtB;;AAEA,IAAIA,WAAJ,EAAiB;AACf,QAAM;AAAEE,IAAAA,YAAF;AAAgBC,IAAAA,UAAhB;AAA4BC,IAAAA,WAA5B;AAAyCC,IAAAA,UAAzC;AAAqDC,IAAAA;AAArD,MAAsER,IAAI,CAACS,KAAL,CAAWP,WAAX,CAA5E;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCS,UAAlC;AACA,OAAKK,QAAL,CAAeb,KAAD,IAAW;AACvB,2CACKA,KADL;AAEEQ,MAAAA,UAFF;AAGED,MAAAA,YAHF;AAIEI,MAAAA,YAJF;AAKEF,MAAAA,WALF;AAMEC,MAAAA;AANF;AAQD,GATD;AAUD,C,CACD;;;AAEJ,eAAeb,WAAf","sourcesContent":["const nextPersist = {};\n\n() => { \n  //save something to local storage\n  console.log('componentDidUpdate!', this.state) \n  localStorage.setItem('key', JSON.stringify(this.state)); \n}\n\nconst clientState = localStorage.getItem('key');\n    console.log('hello?', clientState);\n\n    if (clientState) {\n      const { lastMarketId, marketList, newLocation, totalCards, totalMarkets } = JSON.parse(clientState);\n      console.log('clientState exists', marketList)\n      this.setState((state) => {\n        return {\n          ...state,\n          marketList,\n          lastMarketId,\n          totalMarkets,\n          newLocation,\n          totalCards,\n        }\n      });\n    } \n    // else return { state };\n\nexport default nextPersist;"]},"metadata":{},"sourceType":"module"}