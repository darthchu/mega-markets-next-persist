{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { useState } from \"react\";\nconst nextPersist = {}; // writes to storage\n\n() => {\n  //save something to local storage\n  console.log(\"componentDidUpdate!\", this.state);\n  localStorage.setItem(\"key\", JSON.stringify(this.state));\n};\n\nconst persistConfig = {\n  allowList: [\"lastMarketId\", \"marketList\", \"newLocation\", \"totalCards\", \"totalMarkets\"]\n}; // retrieves from local storage\n\nnextPersist.getStorage = state => {\n  const clientState = localStorage.getItem(\"key\");\n  console.log(\"hello?\", clientState);\n\n  if (clientState) {\n    const allowList = persistConfig.allowList;\n    const parsedState = Object.entries(JSON.parse(clientState)); // console.log(\"clientState exists\", marketList);\n\n    const stateObj = allowList.reduce((acc, curr) => {\n      return acc[curr] = parsedState[curr];\n    }, {});\n    console.log('stateObj: ', stateObj);\n    console.log(\"state: \", state);\n    console.log(\"allow list: \", allowList);\n    console.log(\"parsed state: \", parsedState);\n    return _objectSpread(_objectSpread({}, state), allowList);\n  }\n}; // else return { state };\n\n\nexport default nextPersist;","map":null,"metadata":{},"sourceType":"module"}