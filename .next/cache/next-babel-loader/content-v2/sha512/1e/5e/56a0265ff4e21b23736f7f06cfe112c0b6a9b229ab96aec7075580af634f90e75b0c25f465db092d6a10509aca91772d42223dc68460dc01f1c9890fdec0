{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst nextPersist = {}; // writes to storage\n\n() => {\n  //save something to local storage\n  console.log('componentDidUpdate!', this.state);\n  localStorage.setItem('key', JSON.stringify(this.state));\n};\n\nconst persistConfig = {\n  allowList: ['lastMarketId', 'marketList', 'newLocation', 'totalCards', 'totalMarkets']\n}; // retrieves from local storage\n\nnextPersist.getStorage = () => {\n  const clientState = localStorage.getItem('key');\n  console.log('hello?', clientState);\n\n  if (clientState) {\n    let allAllowList = persistConfig.allowList;\n    [allAllowList] = JSON.parse(clientState);\n    console.log('clientState exists', marketList);\n    this.setState(state => {\n      return _objectSpread(_objectSpread({}, state), allAllowList);\n    });\n  }\n}; // else return { state };\n\n\nexport default nextPersist;","map":{"version":3,"sources":["/Users/matthewsalvador/CS/codesmith-repos/pp/nextjs-tutorial/next-persist.js"],"names":["nextPersist","console","log","state","localStorage","setItem","JSON","stringify","persistConfig","allowList","getStorage","clientState","getItem","allAllowList","parse","marketList","setState"],"mappings":";;;;;;AAAA,MAAMA,WAAW,GAAG,EAApB,C,CAEA;;AACA,MAAM;AACJ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC,KAAKC,KAAxC;AACAC,EAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BC,IAAI,CAACC,SAAL,CAAe,KAAKJ,KAApB,CAA5B;AACD,CAJD;;AAOA,MAAMK,aAAa,GAAG;AACpBC,EAAAA,SAAS,EAAE,CAAC,cAAD,EAAiB,YAAjB,EAA+B,aAA/B,EAA8C,YAA9C,EAA4D,cAA5D;AADS,CAAtB,C,CAIA;;AACAT,WAAW,CAACU,UAAZ,GAAyB,MAAM;AAC/B,QAAMC,WAAW,GAAGP,YAAY,CAACQ,OAAb,CAAqB,KAArB,CAApB;AACAX,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBS,WAAtB;;AAEA,MAAIA,WAAJ,EAAiB;AACf,QAAIE,YAAY,GAAGL,aAAa,CAACC,SAAjC;AACA,KAAEI,YAAF,IAAmBP,IAAI,CAACQ,KAAL,CAAWH,WAAX,CAAnB;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCa,UAAlC;AACA,SAAKC,QAAL,CAAeb,KAAD,IAAW;AACvB,6CACKA,KADL,GAEKU,YAFL;AAID,KALD;AAMD;AACA,CAfD,C,CAgBE;;;AAEF,eAAeb,WAAf","sourcesContent":["const nextPersist = {};\n\n// writes to storage\n() => { \n  //save something to local storage\n  console.log('componentDidUpdate!', this.state) \n  localStorage.setItem('key', JSON.stringify(this.state)); \n}\n\n\nconst persistConfig = {\n  allowList: ['lastMarketId', 'marketList', 'newLocation', 'totalCards', 'totalMarkets']\n}\n\n// retrieves from local storage\nnextPersist.getStorage = () => {\nconst clientState = localStorage.getItem('key');\nconsole.log('hello?', clientState);\n\nif (clientState) {\n  let allAllowList = persistConfig.allowList;\n  [ allAllowList ] = JSON.parse(clientState);\n  console.log('clientState exists', marketList)\n  this.setState((state) => {\n    return {\n      ...state,\n      ...allAllowList\n    }\n  });\n} \n}\n  // else return { state };\n\nexport default nextPersist;"]},"metadata":{},"sourceType":"module"}