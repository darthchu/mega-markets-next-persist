{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport TotalsDisplay from '../components/TotalsDisplay.jsx';\nimport MarketsContainer from './MarketsContainer.jsx';\n\nclass MainContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalMarkets: 0,\n      totalCards: 0,\n      // marketList: props.markets,\n      marketList: [markets],\n      lastMarketId: 10000,\n      newLocation: ''\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState(state => {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        newLocation: e.target.value\n      });\n    });\n  }\n\n  handleClick(e) {\n    this.setState(state => {\n      // increment totalMarkets and lastMarketId\n      const lastMarketId = this.state.lastMarketId + 1;\n      const totalMarkets = this.state.totalMarkets + 1;\n      const newMarket = {\n        // what goes in here? a new market card element\n        marketId: lastMarketId,\n        location: state.newLocation,\n        cards: 0,\n        totalCards: state.totalCards\n      };\n      let marketList = state.marketList.slice();\n      marketList.push(newMarket);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        marketList,\n        lastMarketId,\n        totalMarkets,\n        newLocation: this.state.newLocation\n      }); // create a newMarket object and insert into marketList\n    }, () => {\n      console.log('componentDidUpdate!');\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"outerBox\",\n        children: [/*#__PURE__*/_jsx(\"h1\", {\n          id: \"header\",\n          children: \"MegaMarket Loyalty Cards\"\n        }), /*#__PURE__*/_jsx(TotalsDisplay, {\n          totalCards: this.state.totalCards,\n          totalMarkets: this.state.totalMarkets\n        }), /*#__PURE__*/_jsx(MarketsContainer, {\n          handleClick: this.handleClick,\n          handleChange: this.handleChange,\n          marketList: this.state.marketList\n        })]\n      })\n    });\n  }\n\n}\n\nexport default MainContainer;","map":null,"metadata":{},"sourceType":"module"}