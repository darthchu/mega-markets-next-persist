{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// const persistConfig = {\n//   allowList: [\n//     \"lastMarketId\",\n//     \"marketList\",\n//     \"newLocation\",\n//     \"totalCards\",\n//     \"totalMarkets\",\n//   ],\n// };\nconst nextPersist = {}; // wites to storage\n\nnextPersist.writeStorage = state => {\n  localStorage.setItem('state', JSON.stringify(state));\n}; // retrieves from local storage\n\n\nnextPersist.getStorage = (persistConfig, state) => {\n  const clientState = localStorage.getItem('state');\n\n  if (clientState) {\n    const {\n      allowList\n    } = persistConfig;\n    const parsedClientState = JSON.parse(clientState);\n    const reducedList = allowList.reduce((acc, curr) => {\n      acc[curr] = parsedClientState[curr];\n      return acc;\n    }, {});\n    return _objectSpread(_objectSpread({}, state), reducedList);\n  }\n\n  ;\n};\n\nexport default nextPersist;","map":{"version":3,"sources":["/Users/matthewsalvador/CS/codesmith-repos/pp/nextjs-tutorial/next-persist.js"],"names":["nextPersist","writeStorage","state","localStorage","setItem","JSON","stringify","getStorage","persistConfig","clientState","getItem","allowList","parsedClientState","parse","reducedList","reduce","acc","curr"],"mappings":";;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,WAAW,GAAG,EAApB,C,CAEA;;AACAA,WAAW,CAACC,YAAZ,GAA4BC,KAAD,IAAW;AAEpCC,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAA9B;AAED,CAJD,C,CAOA;;;AACAF,WAAW,CAACO,UAAZ,GAAyB,CAACC,aAAD,EAAgBN,KAAhB,KAA0B;AAEjD,QAAMO,WAAW,GAAGN,YAAY,CAACO,OAAb,CAAqB,OAArB,CAApB;;AAEA,MAAID,WAAJ,EAAiB;AAEf,UAAM;AAAEE,MAAAA;AAAF,QAAgBH,aAAtB;AACA,UAAMI,iBAAiB,GAAGP,IAAI,CAACQ,KAAL,CAAWJ,WAAX,CAA1B;AAEA,UAAMK,WAAW,GAAGH,SAAS,CAACI,MAAV,CAAiB,CAACC,GAAD,EAAMC,IAAN,KAAe;AAClDD,MAAAA,GAAG,CAACC,IAAD,CAAH,GAAYL,iBAAiB,CAACK,IAAD,CAA7B;AACA,aAAOD,GAAP;AACD,KAHmB,EAGjB,EAHiB,CAApB;AAKA,2CACKd,KADL,GAEKY,WAFL;AAKD;;AAAA;AACF,CApBD;;AAuBA,eAAed,WAAf","sourcesContent":["\n// const persistConfig = {\n//   allowList: [\n//     \"lastMarketId\",\n//     \"marketList\",\n//     \"newLocation\",\n//     \"totalCards\",\n//     \"totalMarkets\",\n//   ],\n// };\n\nconst nextPersist = {};\n\n// wites to storage\nnextPersist.writeStorage = (state) => {\n\n  localStorage.setItem('state', JSON.stringify(state));\n\n};\n\n\n// retrieves from local storage\nnextPersist.getStorage = (persistConfig, state) => {\n\n  const clientState = localStorage.getItem('state');\n\n  if (clientState) {\n    \n    const { allowList } = persistConfig;\n    const parsedClientState = JSON.parse(clientState);\n    \n    const reducedList = allowList.reduce((acc, curr) => {\n      acc[curr] = parsedClientState[curr];\n      return acc;\n    }, {})\n  \n    return {\n      ...state,\n      ...reducedList,\n    };\n    \n  };\n};\n\n\nexport default nextPersist;\n"]},"metadata":{},"sourceType":"module"}