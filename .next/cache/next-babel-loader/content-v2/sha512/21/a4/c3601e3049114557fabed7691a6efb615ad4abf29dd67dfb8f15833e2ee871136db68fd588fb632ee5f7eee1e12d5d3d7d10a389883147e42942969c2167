{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/matthewsalvador/CS/codesmith-repos/pp/nextjs-tutorial/redux/containers/MainContainer.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport nextPersist from \"../../next-persist.js\";\nimport TotalsDisplay from \"../components/TotalsDisplay.jsx\";\nimport MarketsContainer from \"./MarketsContainer.jsx\"; // import nextPersist from '../../next-persist'\n\nclass MainContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalMarkets: 0,\n      totalCards: 0,\n      marketList: props.testState,\n      // marketList: [{\n      //   marketId : 1,\n      //   location : 'new yuk',\n      //   cards : 0,\n      //   totalCards : 0\n      // }],\n      lastMarketId: 10000,\n      newLocation: \"\"\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    nextPersist.getStorage = nextPersist.getStorage.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState(state => {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        newLocation: e.target.value\n      });\n    });\n  }\n\n  handleClick(e) {\n    this.setState(state => {\n      // increment totalMarkets and lastMarketId\n      const lastMarketId = this.state.lastMarketId + 1;\n      const totalMarkets = this.state.totalMarkets + 1;\n      const newMarket = {\n        // what goes in here? a new market card element\n        marketId: lastMarketId,\n        location: state.newLocation,\n        cards: 0,\n        totalCards: state.totalCards\n      };\n      let marketList = state.marketList.slice();\n      marketList.push(newMarket);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        marketList,\n        lastMarketId,\n        totalMarkets,\n        newLocation: this.state.newLocation\n      }); // create a newMarket object and insert into marketList\n    }, () => {\n      //save something to local storage\n      console.log(\"componentDidUpdate!\", this.state);\n      localStorage.setItem(\"key\", JSON.stringify(this.state));\n    });\n  }\n\n  componentDidMount() {\n    nextPersist.getStorage(); //   const clientState = localStorage.getItem(\"key\");\n    //   console.log(\"hello?\", clientState);\n    //   if (clientState) {\n    //     const {\n    //       lastMarketId,\n    //       marketList,\n    //       newLocation,\n    //       totalCards,\n    //       totalMarkets,\n    //     } = JSON.parse(clientState);\n    //     console.log(\"clientState exists\", marketList);\n    //     this.setState((state) => {\n    //       return {\n    //         ...state,\n    //         marketList,\n    //         lastMarketId,\n    //         totalMarkets,\n    //         newLocation,\n    //         totalCards,\n    //       };\n    //     });\n    //   }\n    // else return { state };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"outerBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"header\",\n          children: \"MegaMarket Loyalty Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TotalsDisplay, {\n          totalCards: this.state.totalCards,\n          totalMarkets: this.state.totalMarkets\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MarketsContainer, {\n          handleClick: this.handleClick,\n          handleChange: this.handleChange,\n          marketList: this.state.marketList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MainContainer;","map":{"version":3,"sources":["/Users/matthewsalvador/CS/codesmith-repos/pp/nextjs-tutorial/redux/containers/MainContainer.jsx"],"names":["React","Component","nextPersist","TotalsDisplay","MarketsContainer","MainContainer","constructor","props","state","totalMarkets","totalCards","marketList","testState","lastMarketId","newLocation","handleClick","bind","handleChange","getStorage","e","setState","target","value","newMarket","marketId","location","cards","slice","push","console","log","localStorage","setItem","JSON","stringify","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport nextPersist from \"../../next-persist.js\";\nimport TotalsDisplay from \"../components/TotalsDisplay.jsx\";\nimport MarketsContainer from \"./MarketsContainer.jsx\";\n// import nextPersist from '../../next-persist'\n\nclass MainContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalMarkets: 0,\n      totalCards: 0,\n      marketList: props.testState,\n      // marketList: [{\n      //   marketId : 1,\n      //   location : 'new yuk',\n      //   cards : 0,\n      //   totalCards : 0\n      // }],\n      lastMarketId: 10000,\n      newLocation: \"\",\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    nextPersist.getStorage = nextPersist.getStorage.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState((state) => {\n      return {\n        ...state,\n        newLocation: e.target.value,\n      };\n    });\n  }\n\n  handleClick(e) {\n    this.setState(\n      (state) => {\n        // increment totalMarkets and lastMarketId\n        const lastMarketId = this.state.lastMarketId + 1;\n        const totalMarkets = this.state.totalMarkets + 1;\n        const newMarket = {\n          // what goes in here? a new market card element\n          marketId: lastMarketId,\n          location: state.newLocation,\n          cards: 0,\n          totalCards: state.totalCards,\n        };\n        let marketList = state.marketList.slice();\n        marketList.push(newMarket);\n\n        return {\n          ...state,\n          marketList,\n          lastMarketId,\n          totalMarkets,\n          newLocation: this.state.newLocation,\n        };\n\n        // create a newMarket object and insert into marketList\n      },\n      () => {\n        //save something to local storage\n        console.log(\"componentDidUpdate!\", this.state);\n        localStorage.setItem(\"key\", JSON.stringify(this.state));\n      }\n    );\n  }\n\n  componentDidMount() {\n    nextPersist.getStorage();\n    //   const clientState = localStorage.getItem(\"key\");\n    //   console.log(\"hello?\", clientState);\n\n    //   if (clientState) {\n    //     const {\n    //       lastMarketId,\n    //       marketList,\n    //       newLocation,\n    //       totalCards,\n    //       totalMarkets,\n    //     } = JSON.parse(clientState);\n    //     console.log(\"clientState exists\", marketList);\n    //     this.setState((state) => {\n    //       return {\n    //         ...state,\n    //         marketList,\n    //         lastMarketId,\n    //         totalMarkets,\n    //         newLocation,\n    //         totalCards,\n    //       };\n    //     });\n    //   }\n    // else return { state };\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"outerBox\">\n          <h1 id=\"header\">MegaMarket Loyalty Cards</h1>\n          <TotalsDisplay\n            totalCards={this.state.totalCards}\n            totalMarkets={this.state.totalMarkets}\n          />\n          <MarketsContainer\n            handleClick={this.handleClick}\n            handleChange={this.handleChange}\n            marketList={this.state.marketList}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MainContainer;\n"]},"metadata":{},"sourceType":"module"}