{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// const persistConfig = {\n//   allowList: [\n//     \"lastMarketId\",\n//     \"marketList\",\n//     \"newLocation\",\n//     \"totalCards\",\n//     \"totalMarkets\",\n//   ],\n// };\nconst nextPersist = {}; // wites to storage\n\nnextPersist.writeStorage = state => {\n  localStorage.setItem('state', JSON.stringify(state));\n}; // retrieves from local storage\n\n\nnextPersist.getStorage = (persistConfig, state) => {\n  const clientState = localStorage.getItem('state');\n\n  if (clientState) {\n    const {\n      allowList\n    } = persistConfig;\n    const parsedClientState = JSON.parse(clientState);\n    const reducedList = allowList.reduce((acc, curr) => {\n      acc[curr] = parsedClientState[curr];\n      return acc;\n    }, {});\n    return _objectSpread(_objectSpread({}, state), reducedList);\n  }\n\n  ;\n};\n\nexport default nextPersist;","map":null,"metadata":{},"sourceType":"module"}